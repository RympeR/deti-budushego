# Generated by Django 3.1.3 on 2021-06-28 03:29

import core.utils.utils
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import imagekit.models.fields
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attachments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachent_type', models.CharField(choices=[('IMAGE', 'Изображение'), ('VIDEO', 'Видео'), ('AUDIO', 'Аудио'), ('DOCUMENT', 'Документ')], max_length=8, verbose_name='Тип вложения')),
                ('attachment', models.FileField(upload_to=core.utils.utils.attachment, verbose_name='Вложение')),
            ],
            options={
                'verbose_name': 'Вложение',
                'verbose_name_plural': 'Вложения',
            },
        ),
        migrations.CreateModel(
            name='MenuCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('display', models.BooleanField(default=True, verbose_name='Отобразить')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('mеnu_cat', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parent_category', to='users.menucategory', verbose_name='Родительская категория')),
            ],
            options={
                'verbose_name': 'Элемент меню',
                'verbose_name_plural': 'Элементы меню',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=20, unique=True, verbose_name='Телефон')),
                ('fio', models.CharField(blank=True, max_length=255, null=True, verbose_name='ФИО')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Почта')),
                ('image', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to=core.utils.utils.user_avatar, verbose_name='ImagePNG')),
                ('specialization', models.TextField(blank=True, null=True, verbose_name='Специализация')),
                ('personal_statement', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('characteristic', models.TextField(blank=True, null=True, verbose_name='Характеристика')),
                ('teacher', models.BooleanField(default=False, verbose_name='Учитель')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('sertificates', models.ManyToManyField(blank=True, related_name='user_sertificates', to='users.Attachments', verbose_name='Сертификаты')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
